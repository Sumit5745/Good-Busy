{
  "openapi": "3.0.0",
  "info": {
    "title": "Good-Busy API Documentation",
    "version": "1.0.0",
    "description": "API documentation for Good-Busy application microservices"
  },
  "servers": [
    {
      "url": "/v1",
      "description": "API base URL"
    }
  ],
  "tags": [
    {
      "name": "Authentication",
      "description": "User authentication endpoints"
    },
    {
      "name": "User",
      "description": "User management endpoints"
    },
    {
      "name": "Notification",
      "description": "Notification management endpoints"
    },
    {
      "name": "Contact Us",
      "description": "Contact us form and inquiries"
    },
    {
      "name": "Privacy Policy",
      "description": "Privacy policy management"
    },
    {
      "name": "Terms & Conditions",
      "description": "Terms and conditions management"
    },
    {
      "name": "About Us",
      "description": "About us content management"
    },
    {
      "name": "Changelogs",
      "description": "Application changelog endpoints"
    },
    {
      "name": "Mail",
      "description": "Email templates and sending functionality"
    },
    {
      "name": "Chat",
      "description": "Chat system endpoints and WebSocket events"
    },
    {
      "name": "Goals",
      "description": "Personal goals management"
    },
    {
      "name": "Social",
      "description": "Social connections and interactions"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Register new user",
        "description": "Create a new user account",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Account registered successfully"
                    },
                    "token": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Invalid input data"
          },
          "409": {
            "description": "Account already exists"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Login user",
        "description": "Login with email and password",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Login successful"
                    },
                    "token": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Invalid credentials"
          },
          "404": {
            "description": "User not found"
          },
          "401": {
            "description": "Account inactive"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/auth/forgot-password": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Forgot password",
        "description": "Request a password reset OTP",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OTP sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "OTP sent to your email"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/auth/reset-password": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Reset password",
        "description": "Reset password with OTP",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Password reset successful"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid OTP"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user/profile": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user profile",
        "description": "Get current user profile information",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Profile retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Profile retrieved successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Update user profile",
        "description": "Update current user profile information",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProfileRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profile updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Profile updated successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Invalid input data"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user/change-password": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Change password",
        "description": "Change password for logged in user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password changed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Password changed successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Current password is incorrect"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/goals": {
      "post": {
        "tags": ["Goals"],
        "summary": "Create a new goal",
        "description": "Create a new personal goal with title, description, and frequency",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateGoalRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Goal created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GoalResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "tags": ["Goals"],
        "summary": "Get all goals",
        "description": "Get all goals with pagination and filtering options",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Items per page"
          },
          {
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string",
              "enum": ["all", "user"]
            },
            "description": "Filter goals by all users or current user"
          },
          {
            "in": "query",
            "name": "frequency",
            "schema": {
              "type": "string",
              "enum": ["daily", "weekly", "monthly"]
            },
            "description": "Filter goals by frequency"
          }
        ],
        "responses": {
          "200": {
            "description": "Goals retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GoalListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/social/follow": {
      "post": {
        "tags": ["Social"],
        "summary": "Send follow request",
        "description": "Send a follow request to another user",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FollowRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Follow request sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FollowResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or already following"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/social/request/{id}": {
      "put": {
        "tags": ["Social"],
        "summary": "Respond to follow request",
        "description": "Accept or reject a follow request",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Follow request ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["status"],
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": ["accepted", "rejected"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Follow request response updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FollowResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Follow request not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "LoginRequest": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "format": "password"
          }
        }
      },
      "RegisterRequest": {
        "type": "object",
        "required": [
          "username",
          "email",
          "password"
        ],
        "properties": {
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "format": "password",
            "minLength": 6
          },
          "fullName": {
            "type": "string"
          }
        }
      },
      "ForgotPasswordRequest": {
        "type": "object",
        "required": [
          "email"
        ],
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          }
        }
      },
      "ResetPasswordRequest": {
        "type": "object",
        "required": [
          "email",
          "otp",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "otp": {
            "type": "number"
          },
          "password": {
            "type": "string",
            "format": "password",
            "minLength": 6
          }
        }
      },
      "UpdateProfileRequest": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "fullName": {
            "type": "string"
          },
          "bio": {
            "type": "string"
          },
          "avatar": {
            "type": "string",
            "format": "binary"
          }
        }
      },
      "ChangePasswordRequest": {
        "type": "object",
        "required": [
          "currentPassword",
          "newPassword",
          "confirmPassword"
        ],
        "properties": {
          "currentPassword": {
            "type": "string",
            "format": "password",
            "minLength": 6
          },
          "newPassword": {
            "type": "string",
            "format": "password",
            "minLength": 6
          },
          "confirmPassword": {
            "type": "string",
            "format": "password",
            "minLength": 6
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "60d21b4667d0d8992e610c85"
          },
          "username": {
            "type": "string",
            "example": "johndoe"
          },
          "email": {
            "type": "string",
            "example": "john@example.com"
          },
          "fullName": {
            "type": "string",
            "example": "John Doe"
          },
          "bio": {
            "type": "string",
            "example": "Software developer passionate about technology"
          },
          "avatar": {
            "type": "string",
            "example": "/uploads/users/avatar-1234567890.jpg"
          },
          "role": {
            "type": "string",
            "enum": ["user", "admin"],
            "example": "user"
          },
          "isVerified": {
            "type": "boolean",
            "example": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CreateGoalRequest": {
        "type": "object",
        "required": ["title", "description", "frequency"],
        "properties": {
          "title": {
            "type": "string",
            "example": "Exercise Daily"
          },
          "description": {
            "type": "string",
            "example": "Do 30 minutes of exercise every day"
          },
          "frequency": {
            "type": "string",
            "enum": ["daily", "weekly", "monthly"],
            "example": "daily"
          }
        }
      },
      "GoalResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "example": "Goal created successfully"
          },
          "data": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "example": "60d21b4667d0d8992e610c85"
              },
              "title": {
                "type": "string",
                "example": "Exercise Daily"
              },
              "description": {
                "type": "string",
                "example": "Do 30 minutes of exercise every day"
              },
              "frequency": {
                "type": "string",
                "example": "daily"
              },
              "userId": {
                "type": "string",
                "example": "60d21b4667d0d8992e610c86"
              },
              "status": {
                "type": "string",
                "example": "active"
              },
              "completionDates": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "likes": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "thumbsDown": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "GoalListResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "example": "Goals retrieved successfully"
          },
          "data": {
            "type": "object",
            "properties": {
              "goals": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "example": "60d21b4667d0d8992e610c85"
                    },
                    "title": {
                      "type": "string",
                      "example": "Exercise Daily"
                    },
                    "description": {
                      "type": "string",
                      "example": "Do 30 minutes of exercise every day"
                    },
                    "frequency": {
                      "type": "string",
                      "example": "daily"
                    },
                    "userId": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "example": "60d21b4667d0d8992e610c86"
                        },
                        "username": {
                          "type": "string",
                          "example": "johndoe"
                        },
                        "avatar": {
                          "type": "string",
                          "example": "/uploads/users/avatar-1234567890.jpg"
                        }
                      }
                    },
                    "status": {
                      "type": "string",
                      "example": "active"
                    },
                    "likesCount": {
                      "type": "number",
                      "example": 5
                    },
                    "thumbsDownCount": {
                      "type": "number",
                      "example": 1
                    },
                    "isLiked": {
                      "type": "boolean",
                      "example": true
                    },
                    "isThumbsDown": {
                      "type": "boolean",
                      "example": false
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              },
              "pagination": {
                "type": "object",
                "properties": {
                  "total": {
                    "type": "number",
                    "example": 25
                  },
                  "page": {
                    "type": "number",
                    "example": 1
                  },
                  "limit": {
                    "type": "number",
                    "example": 10
                  },
                  "pages": {
                    "type": "number",
                    "example": 3
                  }
                }
              }
            }
          }
        }
      },
      "FollowRequest": {
        "type": "object",
        "required": ["userId"],
        "properties": {
          "userId": {
            "type": "string",
            "example": "60d21b4667d0d8992e610c85"
          }
        }
      },
      "FollowResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "example": "Follow request sent successfully"
          },
          "data": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "example": "60d21b4667d0d8992e610c85"
              },
              "follower": {
                "type": "string",
                "example": "60d21b4667d0d8992e610c86"
              },
              "following": {
                "type": "string",
                "example": "60d21b4667d0d8992e610c87"
              },
              "status": {
                "type": "string",
                "example": "pending"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}